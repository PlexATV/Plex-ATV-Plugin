/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/BackRow.framework/BackRow
 */

#import "BackRow-Structs.h"
#import "BRControl.h"
#import "BRApplianceBrowserProtocol.h"

@class BRImageControl, BRListView, BRScrollControl, BRImage, BRTopShelfView, NSDate, BRCursorControl, NSMutableDictionary, NSArray, BRApplianceProvider, NSTimer, BRApplianceCategoryListProvider;
@protocol BRAppliance;

__attribute__((visibility("hidden")))
@interface BRMainMenuControl : BRControl <BRApplianceBrowserProtocol> {
@private
	int _focusState;	// 40 = 0x28
	BRApplianceProvider *_applianceProvider;	// 44 = 0x2c
	id<BRAppliance> _currentAppliance;	// 48 = 0x30
	NSArray *_columns;	// 52 = 0x34
	long _activeColumn;	// 56 = 0x38
	float _columnScrollAdjustment;	// 60 = 0x3c
	long _curPreviewedColumn;	// 64 = 0x40
	long _oldPreviewedColumn;	// 68 = 0x44
	BRTopShelfView *_curPreview;	// 72 = 0x48
	BRTopShelfView *_oldPreview;	// 76 = 0x4c
	NSTimer *_previewTimer;	// 80 = 0x50
	BRImageControl *_logo;	// 84 = 0x54
	BRImageControl *_backgroundImgControl;	// 88 = 0x58
	BRImageControl *_barGlow;	// 92 = 0x5c
	BRImage *_barGlowActiveImage;	// 96 = 0x60
	BRImage *_barGlowInactiveImage;	// 100 = 0x64
	BRControl *_topDivider;	// 104 = 0x68
	BRControl *_bottomDivider;	// 108 = 0x6c
	BRControl *_leftColumnFade;	// 112 = 0x70
	BRControl *_rightColumnFade;	// 116 = 0x74
	BRCursorControl *_cursor;	// 120 = 0x78
	BRScrollControl *_categoryScroller;	// 124 = 0x7c
	BRListView *_categoryList;	// 128 = 0x80
	BRApplianceCategoryListProvider *_categoryListProvider;	// 132 = 0x84
	NSTimer *_menuTimer;	// 136 = 0x88
	NSDate *_menuTriggerTime;	// 140 = 0x8c
	NSMutableDictionary *_remembery;	// 144 = 0x90
	BOOL _createCategoryList;	// 148 = 0x94
	BOOL _isLoaded;	// 149 = 0x95
	id _datasource;	// 152 = 0x98
	id _delegate;	// 156 = 0x9c
}
@property(readonly, assign) id<BRAppliance> currentAppliance;	// G=0x32e3179d; @synthesize=_currentAppliance
@property(assign) id datasource;	// G=0x32e317cd; S=0x32e317dd; @synthesize=_datasource
@property(assign) id delegate;	// G=0x32e317ad; S=0x32e317bd; @synthesize=_delegate
+ (id)_categoryTextAttributes;	// 0x32e34ca9
- (id)init;	// 0x32e348a1
- (BOOL)_activateColumnIndex:(long)index;	// 0x32e32a5d
- (void)_applianceProviderChanged:(id)changed;	// 0x32e31ab5
- (float)_calculateLongestStringForColumn:(long)column;	// 0x32e34b45
- (id)_categoryListActions;	// 0x32e31d7d
- (void)_categoryListChanged:(id)changed;	// 0x32e31e39
- (id)_categoryListSlowActions;	// 0x32e31ce1
- (void)_categoryListTimerFired:(id)fired;	// 0x32e32151
- (BOOL)_categorySelected:(id)selected;	// 0x32e32c71
- (void)_createCategoryList;	// 0x32e31e85
- (id)_currentApplianceKey;	// 0x32e32d85
- (id)_currentCategoryIdentifier;	// 0x32e32d15
- (void)_expandAndCollapseShelves;	// 0x32e322ad
- (long)_focusedCategoryIndex;	// 0x32e31e19
- (BOOL)_handleEventInMenuFocusedState:(id)menuFocusedState;	// 0x32e327a1
- (BOOL)_handleEventInMenuUnocusedState:(id)menuUnocusedState;	// 0x32e317ed
- (BOOL)_handleEventInShelfFocusedState:(id)shelfFocusedState;	// 0x32e32731
- (void)_hideCategoryList;	// 0x32e32175
- (void)_highlightDefaultCategory;	// 0x32e31bb9
- (BOOL)_isCategoryListActive;	// 0x32e31cad
- (void)_languageChanged:(id)changed;	// 0x32e31afd
- (id)_leftFadeFilters;	// 0x32e35059
- (BOOL)_previewColumnAtIndex:(long)index;	// 0x32e32465
- (void)_previewTimerFired:(id)fired;	// 0x32e32435
- (void)_reload;	// 0x32e330f1
- (void)_removeCategoryList;	// 0x32e320c5
- (id)_rightFadeFilters;	// 0x32e34f5d
- (void)_showCategoryList;	// 0x32e321bd
- (void)_unload;	// 0x32e32fbd
- (void)_updateAppliance;	// 0x32e32dc5
- (void)_updateCategoryList;	// 0x32e34859
- (void)_updateCategoryListAfterDelay:(double)delay;	// 0x32e34741
- (void)_updateCategoryProvider;	// 0x32e32205
- (void)_updateCategoryRemembery;	// 0x32e31c65
- (void)_updatePreviewAfterDelay:(double)delay;	// 0x32e323bd
- (void)_windowBoundsChanged:(id)changed;	// 0x32e32c35
- (id)accessibilityLabel;	// 0x32e33bd5
- (id)accessibilityScreenContent;	// 0x32e31b89
- (id)actionForCurrentSelection;	// 0x32e3447d
- (BOOL)brEventAction:(id)action;	// 0x32e33d69
- (void)clearRemembery;	// 0x32e34291
- (void)controlWasActivated;	// 0x32e33cbd
- (void)controlWasDeactivated;	// 0x32e33c81
- (id)controllerForCurrentSelection;	// 0x32e344ed
- (BOOL)controllerMatchesCurrentSelection:(id)selection;	// 0x32e342b1
// declared property getter: - (id)currentAppliance;	// 0x32e3179d
// declared property getter: - (id)datasource;	// 0x32e317cd
- (void)dealloc;	// 0x32e34555
// declared property getter: - (id)delegate;	// 0x32e317ad
- (id)focusedControlForEvent:(id)event focusPoint:(CGPoint *)point;	// 0x32e33d55
- (void)highlightApplianceWithKey:(id)key andCategoryWithIdentifier:(id)identifier;	// 0x32e34369
- (void)highlightItemsForController:(id)controller;	// 0x32e34421
- (BOOL)isAccessibilityElement;	// 0x32e33c41
- (void)layoutSubcontrols;	// 0x32e35155
- (float)list:(id)list heightForItemAtIndexPath:(id)indexPath;	// 0x32e34b2d
- (void)reloadTopShelf;	// 0x32e34271
// declared property setter: - (void)setDatasource:(id)datasource;	// 0x32e317dd
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x32e317bd
- (BOOL)setMenuFocusState:(int)state;	// 0x32e33f0d
- (CGSize)sizeThatFits:(CGSize)fits;	// 0x32e34b01
@end

